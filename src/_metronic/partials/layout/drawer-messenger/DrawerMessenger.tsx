import React, {useState, FC, useEffect, useRef} from 'react'
import {ChatContent} from './ChatContent'
import {ChatUser} from './ChatUser'
import Axios, {AxiosResponse} from 'axios'
import {socket} from './ConnectSocketIo'
import { URL_BOOKING_STUDIO } from '../../../../setup/URL'
export interface CONVERSATION {
  id: number
  withPartner: boolean
  Chatter: {
    id: number
    TenantId: any
    PartnerName: string | null
    RepresentativeName: string | null
    Phone: string
    OtherPhone: string | null
    Email: string | null
    ReEmail: string | null
    BusinessRegistrationLicenseNumber: any
    Address: string | null
    BankBranchName: string | null
    BankAccount: string | null
    BankAccountOwnerName: string | null
    AutoGeneratedPassword: string | null
    CreationTime: string
    CreatorUserId: any
    LastModificationTime: string | null
    LastModifierUserId: any
    IsDeleted: boolean
    DeleterUserId: any
    DeletionTime: any
    BusinessType: any
    PersonalIdentity: any
    ProvinceId: number
  }
  createdAt: string
  updatedAt: string
  newestMessage: {
    id: number
    ConversationId: number
    Content: string
    PartnerId: number
    CustomerId: number
    createdAt: string
    updatedAt: string
  } | null
}
export const DrawerMessenger: FC = React.memo(() => {
  const [toggleState, setToggleState] = useState(0)
  const [searchTerm, setSearchTerm] = useState('')
  const initMountState = useRef<CONVERSATION[]>([])
  const [conversation, setConversation] = useState<CONVERSATION[]>(initMountState.current)
  /*   const [flag, setFlag] = useState(false) */
  useEffect(() => {
    const ChatList = () => {
      let promise = Axios({
        url: `${URL_BOOKING_STUDIO}chat/conversation?page=1&limit=3&option=0`,
        method: 'GET',
      })
      promise.then((result: AxiosResponse<any>) => {
        console.log('Thanh cong')
        //Nếu gọi api thành công
        // => set lại state
        initMountState.current = result.data.data
        setConversation(result.data.data)
        setToggleState(result.data.data[0].id)
        console.log("da lay ve");
        /* setTotalPages(result.data.pagination.totalPages) */
      })
      promise.catch((err) => {
        console.log('That bai')
        console.log(err.response.data)
      })
    }
    ChatList()
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [])
  useEffect(() => {
      socket.on('receive_message', (data) => {
        let promise = Axios({
          url: `${URL_BOOKING_STUDIO}chat/conversation?page=1&limit=1&option=0`,
          method: 'GET',
        })
        promise.then((result: AxiosResponse<any>) => {
          console.log('Thanh cong')
          //Nếu gọi api thành công
          // => set lại state
          let newConversation = [...initMountState.current]
          if(newConversation.findIndex((i) => i.id === result.data.data[0].id) !== -1){
            var indexOf = newConversation.findIndex((i) => i.id === result.data.data[0].id)
          newConversation.splice(indexOf, 1)
          initMountState.current = [result.data.data[0], ...newConversation]
          setConversation(initMountState.current)
          }
          else {
            initMountState.current = [result.data.data[0], ...newConversation]
          setConversation(initMountState.current)
          }
        })
        promise.catch((err) => {
          console.log('That bai')
          console.log(err.response.data)
        })
      })
       // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [socket])
  const ListUserChat = () => {
    return conversation.filter((chat) => {
        if (searchTerm === '') {
          return chat
        } else if (
          chat.Chatter.PartnerName
            ? chat.Chatter.PartnerName.toLowerCase().includes(searchTerm.toLowerCase())
            : ''
        ) {
          return chat
        } 
        return false
      }).map((chat) => (
        <ChatUser
          userInfo={chat}
          toggleState={toggleState}
          toggleClick={(e: any) => setToggleState(e)}
        />
      ))
  }
  const ListChat = () => {
    return conversation.map((chat) => (
        <div
          className={toggleState === chat.id ? 'content-chat  active-content-chat' : 'content-chat'}
          key={chat.id}
        >
          <ChatContent userchat={chat} />
        </div>
      ))
  }
  return (
    <div className='d-flex flex-column w-100 h-100 overflow-hidden'>
      <div
        className='d-flex w-100 flex-row justify-content-between '
        style={{zIndex: '1', boxShadow: '0 4px 20px 0 rgba(0, 0, 0, 0.1)'}}
      >
        <div className='py-4 px-10 d-flex flex-row align-items-center'>
          <i
            className='fa-regular fa-comment-dots h-100 d-flex align-items-center pe-4'
            style={{fontSize: '27px', color: '#E22828'}}
          ></i>
          <span style={{fontSize: '23px', color: '#E22828', fontWeight: '600'}}>Chat</span>
        </div>
      </div>
      <div className='d-flex w-100 h-100'>
        <div className='col-5'>
          <div className=' pt-8  '>
            <div className='px-6'>
              <div className='input-group rounded mb-3' style={{border: '1px solid #B2B2B2'}}>
                <span className='input-group-text border-0 bg-white' id='search-addon'>
                  <i className='fas fa-search fs-2' />
                </span>
                <input
                  type='text'
                  className='form-control rounded fs-4'
                  placeholder='Tìm kiếm'
                  aria-label='Search'
                  aria-describedby='search-addon'
                  style={{border: 'none'}}
                  onChange={(event) => {
                    setSearchTerm(event.target.value)
                  }}
                />
              </div>
            </div>
            <div style={{height: '390px', overflow: 'scroll'}}>
              <ul className='list-unstyled mb-0 d-flex flex-column justify-content-center'>
                {ListUserChat()}
              </ul>
            </div>
          </div>
        </div>
        <div className='h-100 ' style={{borderRight: '2px solid #CACACA'}}></div>

        <div className='col-7' style={{height: '474px', overflow: 'hidden'}}>
          {ListChat()}
        </div>
      </div>
    </div>
  )
})
